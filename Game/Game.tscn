[gd_scene load_steps=13 format=2]

[ext_resource path="res://Player/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Enemies/Mine.tscn" type="PackedScene" id=2]
[ext_resource path="res://Assets/Sky.png" type="Texture" id=3]
[ext_resource path="res://Assets/PirateSubmarines.wav" type="AudioStream" id=4]
[ext_resource path="res://Game/Game.gd" type="Script" id=5]
[ext_resource path="res://Game/Spawner.gd" type="Script" id=6]
[ext_resource path="res://Assets/Floor.png" type="Texture" id=7]
[ext_resource path="res://Game/Floor.gd" type="Script" id=8]
[ext_resource path="res://Assets/Background.png" type="Texture" id=9]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float frequency = 6;
uniform float depth = 0.006;

void fragment() {
	vec2 uv = SCREEN_UV;
	uv.x += sin(uv.y * frequency + TIME) * depth;
	uv.x = clamp(uv.x, 0.0, 1.0);
	vec3 c = textureLod(SCREEN_TEXTURE, uv, 0.0).rgb;

	COLOR.rgb = c;
}

//Copyright (c) 2021 Godot Engine

//Permission is hereby granted, free of charge, to any person obtaining a copy
//of this software and associated documentation files (the \"Software\"), to deal
//in the Software without restriction, including without limitation the rights
//to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//copies of the Software, and to permit persons to whom the Software is
//furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all
//copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//SOFTWARE."

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/frequency = 6.0
shader_param/depth = 0.006

[sub_resource type="CanvasItemMaterial" id=3]

[node name="GameBase" type="Node2D"]
position = Vector2( 1, 1 )
script = ExtResource( 5 )

[node name="Player" parent="." instance=ExtResource( 1 )]

[node name="Camera2D" type="Camera2D" parent="Player"]
visible = false
position = Vector2( 1, 0 )
current = true

[node name="CanvasLayer" type="CanvasLayer" parent="Player/Camera2D"]

[node name="ColorRect" type="ColorRect" parent="Player/Camera2D/CanvasLayer"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 4 )
autoplay = true

[node name="Spawner" type="Node2D" parent="."]
script = ExtResource( 6 )
game_path = NodePath("..")
player_path = NodePath("../Player")
Mine = ExtResource( 2 )

[node name="WaveTimer" type="Timer" parent="Spawner"]
autostart = true

[node name="Sky" type="Node2D" parent="."]
position = Vector2( 0, -300 )
scale = Vector2( 10000, 1 )
z_index = -1

[node name="Sprite" type="Sprite" parent="Sky"]
material = SubResource( 3 )
texture = ExtResource( 3 )

[node name="Floor" type="Node2D" parent="."]
position = Vector2( 0, 10000 )
scale = Vector2( 10000, 1 )
z_index = -1
script = ExtResource( 8 )

[node name="Sprite" type="Sprite" parent="Floor"]
material = SubResource( 3 )
texture = ExtResource( 7 )

[node name="HUD" type="CanvasLayer" parent="."]

[node name="HealthBar" type="ColorRect" parent="HUD"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -400.0
margin_top = 15.0
margin_right = -30.0
margin_bottom = 65.0
color = Color( 0.262745, 0.262745, 0.262745, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Health" type="ColorRect" parent="HUD/HealthBar"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -360.0
margin_top = 10.0
margin_right = -10.0
margin_bottom = 40.0
color = Color( 1, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.04, 0.1 )

[node name="Background" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 0, 530 )
scale = Vector2( 4, 4 )
texture = ExtResource( 9 )
[connection signal="timeout" from="Spawner/WaveTimer" to="Spawner" method="_on_WaveTimer_timeout"]
